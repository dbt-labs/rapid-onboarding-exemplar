# version: 2

# models:

#   - name: stg_jaffle_shop__orders
#     description: >
#           multi line description 
#           of my staging orders model from
#           jaffle shop
#     data_tests:
#       - dbt_utils.recency:
#           datepart: day
#           field: _etl_loaded_at
#           interval: 7
#     columns:
#       - name: order_id 
#         data_tests:
#           - not_null:
#               config:
#                 where: _etl_loaded_at >= dateadd('day', -3, current_timestamp())
#                 severity: error
#                 error_if: ">20"
#                 warn_if: ">10"
#                 limit: 25
#                 store_failures: true
#           - filtered_unique:
#               records_to_check: _etl_loaded_at >= dateadd('day', -3, current_timestamp())
#       - name: order_date
#         description: |
#           multi line description 
#           of my order date column from my
#           jaffle shop orders model
#         data_tests:
#           - dbt_expectations.expect_column_values_to_be_of_type:
#               column_type: date

#   - name: stg_jaffle_shop__customers
#     description: |
#       multi line description 
#       of my staging
#       jaffle shop customers model
#     data_tests:
#       - not_empty
#       - dbt_utils.equal_rowcount:
#           compare_model: source('jaffle_shop', 'customers')
#       - dbt_utils.equality:
#           compare_model: source('jaffle_shop', 'customers')
#           compare_columns:
#             - first_name
#             - last_name
#       - dbt_utils.expression_is_true:
#           expression: "len(first_name) > 1"
#       - dbt_expectations.expect_table_row_count_to_be_between:
#           min_value: 1

#     columns:
#       - name: customer_id
#         description: >
#           multi line description 
#           of my customer id column from my
#           jaffle shop customers model
#         data_tests:
#           - unique 
#           - not_null
#           - unique_and_not_null
#       - name: first_name
#         data_tests:
#           - dbt_utils.at_least_one
#           - dbt_utils.not_constant
#           - dbt_utils.not_empty_string
#           - dbt_utils.not_accepted_values:
#               values: ['test']
